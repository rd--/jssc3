export type OperatorDictionary = Record<string, number>;

export const unaryOperators: OperatorDictionary = {
	Neg: 0,
	Not: 1,
	IsNil: 2,
	NotNil: 3,
	BitNot: 4,
	Abs: 5,
	AsFloat: 6,
	AsInt: 7,
	Ceil: 8,
	Floor: 9,
	Frac: 10,
	Sign: 11,
	Squared: 12,
	Cubed: 13,
	Sqrt: 14,
	Exp: 15,
	Recip: 16,
	MidiCps: 17,
	CpsMidi: 18,
	MidiRatio: 19,
	RatioMidi: 20,
	DbAmp: 21,
	AmpDb: 22,
	OctCps: 23,
	CpsOct: 24,
	Log: 25,
	Log2: 26,
	Log10: 27,
	Sin: 28,
	Cos: 29,
	Tan: 30,
	ArcSin: 31,
	ArcCos: 32,
	ArcTan: 33,
	SinH: 34,
	CosH: 35,
	TanH: 36,
	Rand_: 37,
	Rand2_: 38,
	LinRand_: 39,
	BiLinRand: 40,
	Sum3Rand: 41,
	Distort: 42,
	SoftClip: 43,
	Coin: 44,
	DigitValue: 45,
	Silence: 46,
	Thru: 47,
	RectWindow: 48,
	HanWindow: 49,
	WelchWindow: 50,
	TriWindow: 51,
	Ramp_: 52,
	Scurve: 53,
};

export const binaryOperators: OperatorDictionary = {
	Add: 0,
	Sub: 1,
	Mul: 2,
	Idiv: 3,
	Fdiv: 4,
	Mod: 5,
	Eq: 6,
	Ne: 7,
	Lt: 8,
	Gt: 9,
	Le: 10,
	Ge: 11,
	Min: 12,
	Max: 13,
	BitAnd: 14,
	BitOr: 15,
	BitXor: 16,
	Lcm: 17,
	Gcd: 18,
	RoundTo: 19,
	RoundUp: 20,
	Trunc: 21,
	Atan2: 22,
	Hypot: 23,
	Hypotx: 24,
	Pow: 25,
	ShiftLeft: 26,
	ShiftRight: 27,
	UnsignedShift: 28,
	Fill: 29,
	Ring1: 30,
	Ring2: 31,
	Ring3: 32,
	Ring4: 33,
	DifSqr: 34,
	SumSqr: 35,
	SqrSum: 36,
	SqrDif: 37,
	AbsDif: 38,
	Thresh: 39,
	AmClip: 40,
	ScaleNeg: 41,
	Clip2: 42,
	Excess: 43,
	Fold2: 44,
	Wrap2: 45,
	FirstArg: 46,
	RandRange: 47,
	ExpRandRange: 48,
};

export function unaryOperatorName(specialIndex: number): string {
	return Object.keys(unaryOperators).find((key) =>
		unaryOperators[key] === specialIndex
	) || 'unknown unary operator name?';
}

export function binaryOperatorName(specialIndex: number): string {
	return Object.keys(binaryOperators).find((key) =>
		binaryOperators[key] === specialIndex
	) || 'unknown binary operator name?';
}

export const operatorNameTable: Record<string, string> = {
	'+': 'Add',
	'-': 'Sub',
	'*': 'Mul',
	'/': 'Fdiv',
	'%': 'Mod',
	'=': 'Eq',
	'<': 'Lt',
	'>': 'Gt',
	'&': 'BitAnd',
	'|': 'BitOr',
};
